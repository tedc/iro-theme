.section {
	&__{
		&label, &title, &text {
			.swiper-container & {
				transition: $speed transform;
				transform: translate3d(0, $p*-1, 0);
			}
			.swiper-slide-active & {
				transform: translate3d(0, 0, 0);
			}
		}
		&label {
			text-transform: uppercase;
			color: $alternate-color;
			font-weight: 300;
			@include grow('small', 'bottom');
			.swiper-slide-active & {
				transition-delay: $speed/2;
			}
		}
		&text {
			@include grow('small', 'top');
			@include grow('md', 'top');
			@extend %content;
			p, ul, ol {
				.row:not(.row--inverted) &{
					color: $dark-gray;
				}
			}
			img {
				width: $f!important;
				height: auto!important;
			}
			.swiper-slide & {
				transition-delay: $speed/2;
			}
			.swiper-slide-active & {
				transition-delay: 0;
			}
		}
		&cell {
			[class*="--gradient"] & {
				position: relative;
				z-index: 3;
			}
			@include grow();
			@each $var in ('small', 'md', 'lg' ){
				@each $pos in ('top', 'bottom') {
					@include grow($var, $pos);
				}
			}
			text-align: center;
			@include breakpoint() {
				text-align: left;
			}
			&--centered {
				margin: auto;
			}
			&--right {
				margin-left: auto;
			}
			&--image {
				&.section__cell--even {
					text-align: right;
				}
			}
			&--aligncenter {
				@include breakpoint() {
					text-align: center;
				}
			}
			&--alignright {
				@include breakpoint() {
					text-align: right;
				}
			}
			&--hide {
				@include breakpoint($min: false) {
					display: none;
				}
			}
			&--text {
				z-index: 2;
			}
			.section--grid-invert & {
				order: 3;
				&:nth-child(1) {
					order: 2;
				}
				&:nth-child(2) {
					order: 1;
				}
				@include breakpoint() {
					&:nth-child(1) {
						order: 1;
					}
					&:nth-child(2) {
						order: 2;
					}
				}
			}
		}
		&figure {
			line-height: 0;
			position: relative;
			z-index: 1;
			.row--shrink-fw &, &.section__figure--shrink-fw-right, &.section__figure--shrink-fw-left {
				text-align: center;
			}
			&--double {
				@include breakpoint() {	
					display: flex;
					max-width: none;
					.section__cell--even & {
						justify-content: flex-end;
					}
					.section__cell--odd & {
						justify-content: flex-start;
					}
				}
			}
		}
		&image {
			display: inline-block;
			max-width: $f;
			&--mobile {
				@include breakpoint() {
					display: none;
				}
				&-hide {
					@include breakpoint($min: false) {
						display: none;
					}
				}
			}
			@include breakpoint(1024px) {	
				flex: 0 0 auto;
				max-width: none;
				.section__cell--s6 .section__figure--double & {
					width: calc(200% - #{em($p*2)});
				}
				.section__cell--s8 .section__figure--double  & {
					$w: $f * 1.5;
					width: calc(#{$w} - #{em($p*2)});
				}
				.section__cell--s7 .section__figure--double  & {
					$w: $f * 1.24;
					width: calc(#{$w} - #{em($p*2)});
				}
			}
			@include breakpoint($max-width) {
				.section__cell--s6 .section__figure--double  & {
					width: calc(200% - ((100vw - #{$max-width}) / 2));
				}
				.section__cell--s8 & {
					$w: $f * 1.5;
					width: calc(#{$w} - ((100vw - #{$max-width}) / 2));
				}
				.section__cell--s7 .section__figure--double  & {
					$w: $f * 1.24;
					width: calc(#{$w} - ((100vw - #{$max-width}) / 2));
				}
			}
		}
		&thumb {
			width: $f!important;
			position: relative;
			height: auto!important;
			@include breakpoint() {
				object-fit: contain;
				[class*="section__figure--shrink-fw"] &{
					min-height: em(400px);
					max-height: calc(100vh - #{em(80px)});
				}
				.section__cell--even .section__figure:not([class*="section__figure--shrink-fw"]) & {
					object-position: right center;
				}
				.section__cell--odd .section__figure:not([class*="section__figure--shrink-fw"]) & {
					object-position: left center;
				}
			}
		}
		&title {
			line-height: percentage($lh);
			&--forcewhite {
				color: $w;
			}
			&--medium {	
		        margin-bottom: lh_mb(30px, $lh);
		        @include breakpoint($bp) {     
		        	margin-bottom: lh_mb(35px, $lh);
			    }
			}
			&--big {
			    margin-bottom: lh_mb(35px, $lh);
			    @include breakpoint($bp) {
			       margin-bottom: lh_mb(42px, $lh);
			    }
			}
			&--large {
			    margin-bottom: lh_mb(42px, $lh);
		        @include breakpoint($bp) {
		            margin-bottom: lh_mb(55px, $lh);
		        }
			}
			.swiper-slide & {
				transition-delay: $speed/4;
			}
		}
		&symbol {
			color: $alternate-color;
			[class*="icon"] {
				font-size: em(70px);
				margin-right: em($p/2, 70px);
			}
			svg {
				width: auto;
				height: em(70px);
			}
			path {
				fill: $alternate-color!important;
			}
			&--blu {
				color: $brand-main;
				path {
					fill: $brand-main!important;
				}
			}
			.row--inverted & {
				color: $w;
				path {
					fill: $w!important;
				}
			}
			&s {
				@include grow('small', 'bottom');
			}
		}
		&link {
			@include grow('small', 'top');
			@include grow('md', 'top');
		}
		&item {
			flex: 0 0 auto;
			width: $f;
		}
		&wrapper {
			align-items: flex-start;
		}
		&pagination {
			@include grow('md', 'top');
			display: flex;
			align-items: center;
			.icon-arrow-left, .icon-arrow-right {
				font-size: em($p);
				color: $brand-main;
				cursor: pointer;
				&:before {
					display: inline-block;
					transition: transform $speed;
				}
			}
			.icon-arrow-left {
				margin-right: 2em;
				&:hover {
					&:before {
						transform: translate3d(-1px, 0, 0);
					}
				}
			}
			.icon-arrow-right {
				margin-left: 2em;
				&:hover {
					&:before {
						transform: translate3d(1px, 0, 0);
					}
				}
			}
			.swiper-pagination {
				margin: auto;
				@include breakpoint() {
					margin: 0;
				}
			}
		}
		&article {
			display: inline-flex;
			align-items: center;
			.icon-arrow-link {
				font-size: 7px;
				width: $p;
				height: $p;
				line-height: $p;
				text-align: center;
				background-color: $light-border;
				border-radius: $p;
				color: $brand-main;
				transition: background-color $speed;
				margin-left: $p/2;
				&:before {
					display: inline-block;
					transition: transform $speed;
				}
			}
			&:hover{
				.icon-arrow-link {
					background-color: transparent;
					//color: $w;
					&:before {
						transform: translate3d(2px, -2px, 0);
					}
				}
			}
		}
	}
	
}