.blog {
	@include grow('lg');
	&__{
		&header {
			width: $f;
			flex: 0 0 auto;
			position: relative;
		}
		&nav {
			@include grow('md', 'top');
			position: relative;
		}
		&pagination {
			@extend %pagination;
			justify-content: center;
			margin-top: em($p*2);
			@include grow('lg');
		}
	}
	&--row {
		position: relative;
		padding: {
			top: em(280px);
			bottom: em(280px);
		};
	}
}
.post {
	@include grow('lg', 'top');
	position: relative;
	z-index: 1;
	&--grid {
		align-items: center;
		align-content: center;
	}
	&__{
		&cat {
			color: $dark-gray;
			font-weight: 500;
			font-size: em(14px);
			&:hover {
				color: $brand-main;
			}
		}
		&updated {
			color: $light-color;
			font-weight: 500;
			font-size: em(14px);
			display: inline-block;
			padding-left: em($p);
		}
		&title {
			padding-top: em($p, 30px);
			line-height: percentage(40px/35px);
			margin-bottom: lh_mb(30px, (40px/35px));
			.post--grid & {
				padding-bottom: em($p, 30px);
			}
		    @include breakpoint($bp) {
		        padding-top: em($p, 35px);
				margin-bottom: lh_mb(35px, (40px/35px));
				.post--grid & {
					padding-bottom: em($p, 35px);
				}
		    }
		    a {
		    	.post--cell-s6:hover & {
		    		color: $alternate-color;
		    	}
		    }
		    &--big {
		    	.single & {
		    		padding-bottom: em($p*2, 35px);
				    @include breakpoint($bp) {
				        padding-bottom: em($p*2, 42px);
				    }
		    	}
		    }
		}
		&button {
			margin-top: em($p);
		}
		&readmore {
			margin-top: 1em;
			font-size: 1em;
			font-family: $alternate-font;
			display: inline-flex;
			align-items: center;
			i {
				font-size: em($base_font_size, 20px);
				margin-left: em($p);
				transition: transform $speed, color $speed;
			}
			&:hover {
				i {
					transform: translate3d(5px, 0, 0);
				}
			}
		}
		&figure {
			position: relative;
			&:before {
				display: block;
				content: '';
				padding-top: percentage(9/16);
			}
			img {
				top: 0;
				left: 0;
				position: absolute;
				object-fit: cover;
				width: $f!important;
				display: block;
				height: $f!important;
				.post--grid & {
					@include breakpoint() {
						width: calc(100% + #{em($p*4)})!important;
					}
				}
			}
			.post--cell-s6 & {
				&:after {
					content: '';
					background-color: $brand-main;
					opacity: 0;
					transition: opacity $speed;
					@include full;
				}
			}
			.post--cell-s6:hover & {
	    		&:after {
					opacity: 0.8;
				}
	    	}
		}
		&content {
			@include normalize_padding_half;
			@include grow();
			@include grow('small', 'top');
			position: relative;
			.post--grid & {
				background-color: $lighter-color;
			}
			.post--grid &, &--mw-large {
				@include normalize_padding;
			}
			&--mw-large {
				@extend %content;
				h2, h3, h4, h5, h6 {
					font-family: $alternate-font;
					color: $brand-main;
					position: relative;
					padding-left: percentage(93px/775px);
					margin-left: percentage(93px/775px)*-1;
					background: url(../images/title-cloud.png) no-repeat left center;
				}
				h2 {
				    padding-top: em($p*2, 30px);
				    padding-bottom: em($p*2, 30px);;
					font-size: em(30px);
				   	background-size: auto em(62px, 30px);
				    @include breakpoint($bp) {
				        font-size: em(35px);
				        padding-top: em($p*2, 35px);
				        padding-bottom: em($p*2, 35px);
				   		background-size: auto em(62px, 35px);
				    }
				}
				h3 {
					font-size: em(26px);
				   	padding-top: em($p*2, 26px);
				   	padding-bottom: em($p*2, 26px);
				   	background-size: auto em(62px, 26px);
					@include breakpoint($bp) {
						font-size: em(30px);
				   		padding-top: em($p*2, 30px);
				   		padding-bottom: em($p*2, 30px);
				   		background-size: auto em(62px, 30px);
					}
				}
				h4 {
					font-size: em(22px);
				   	padding-top: em($p*2, 22px);
				   	padding-bottom: em($p*2, 22px);
				   	background-size: auto em(62px, 22px);
					@include breakpoint($bp) {
						font-size: em(26px);
				   		padding-top: em($p*2, 26px);
				   		padding-bottom: em($p*2, 26px);
				   		background-size: auto em(62px, 26px);
					}
				}
				h5 {
					font-size: em(18px);
				   	padding-top: em($p*2, 18px);
				   	padding-bottom: em($p*2, 18px);
				   	background-size: auto em(62px, 18px);
					@include breakpoint($bp) {
						font-size: em(22px);
				   		padding-top: em($p*2, 22px);
				   		padding-bottom: em($p*2, 22px);
				   		background-size: auto em(62px, 22px);
					}
				}
				h6 {
					font-size: em(16px);
				   	padding-top: em($p*2);
				   	padding-bottom: em($p*2);
				   	background-size: auto em(62px);
					@include breakpoint($bp) {
						font-size: em(18px);
				   		padding-top: em($p*2, 18px);
				   		padding-bottom: em($p*2, 18px);
				   		background-size: auto em(62px, 18px);
					}
				}
				blockquote {
					margin: 0;
					position: relative;
					padding: em($p, 18px) 0 em($p*2, 18px) em($p*2, 18px);
					font-style: italic;
					font-size: em(18px);
					&:before {
						content: '\201C';
						color: $alternate-color;
						position: absolute;
						top: 0;
						left: 0;
						font-size: em(60px, 18px);
						font-family: $alternate-font;
					}
				}
			}
		}
		&meta {
			@include normalize_padding_half;
			padding-bottom: em($p);
			position: relative;
			z-index: 10;
			.post__content & {
				padding-left: 0!important;
				padding-right: 0!important;
				justify-content: space-between;
				align-items: center;
			}
		}
		&social {
			display: flex;
			align-items: center;
			strong {
				color: $dark-gray;
			}
			i {
				display: flex;
				align-items: center;
				justify-content: center;
				color: $light-color;
				margin-left: em($p/2);
				&:hover {
					color: $alternate-color;
				}
			}
		}
		&image {
			display: inline-block;
			max-width: $f;
			line-height: 0;
			img {
				width: $f!important;
				height: auto!important;
			}
		}
		&thumbnail {
			.single & {
				object-fit: cover;
				width: $f!important;
				height: auto!important;
				max-height: calc(100vh - #{em($p*4)});
			}
		}
	}
	&s {
		overflow: hidden;
		@include grow('lg', 'bottom');
		&__{
			&header {
				position: relative;
				@include grow('lg', 'top');
				&:before {
					position: absolute;
					content: '';
					top: 0;
					width: 100vw;
					bottom: em($p*-10);
					left: 50%;
					transform: translate3d(-50%, 0, 0);
					background: linear-gradient(to bottom, $w, $cyan);
				}
			}
			&title {
				position: relative;
				line-height: 1;
			}
		}
		.post {
			position: relative;
		}
	}
}